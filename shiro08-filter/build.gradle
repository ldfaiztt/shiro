import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'

// jar包的名字
archivesBaseName = 'shiro08-filter'
description  = "第八章 拦截器"
eclipse {
	project {
		name = 'shiro08-filter'
	}

	wtp {
	    component {
	      	contextPath = 'meweb'
	      	deployName = 'Example project web'
	  	}
	  	facet {
            facet name: 'jst.java', version: '1.6'
            facet name: 'jst.web', version: '2.5'
        }
	}
}

dependencies {

    // 因为此项目为 web 项目，所以需要将下述 jar 包设置为 provided
	providedCompile (
        libraries.'servlet-api',
        libraries.'jsp-api'
    )

	compile (
    	libraries.'beanutils',
       	libraries.'servlet-api',
       	libraries.'ehcache-core',
       	libraries.'shiro-web',
       	libraries.'servlet-api',
       	libraries.'mysql',
       	libraries.'druid'
    )
    testCompile(
    	
    )
}

// 设置 snapshot war 版本号
// 格式为： me-web-1.1.0.123-SNAPSHOT.war
task setSnapshotWarVersion << {
	println '== Snapshot begin....'
	def buildNumber = buildNumberIncrease()
    version += '.' + buildNumber
	version += '-SNAPSHOT'
	println '-- Snapshot version: ' + version
	war {
        manifest = defaultManifest(project)
    }
}

// 编译 snapshot 版的 war 包
// 如果需要用 grunt 打包，则将 grunt 至于依赖列表中，使其位于 war 前端：
// task snapshot(dependsOn: ['setSnapshotWarVersion', 'grunt', 'war']) << {
task snapshot(dependsOn: ['setSnapshotWarVersion', 'war']) << {
	println '== Snapshot WAR Generate Over'
}

// 设置 release 包的版本号
// 格式为: me-web-1.1.0.123.war
task setReleaseWarVersion << {
	println '== Release Begin...'
	def buildNumber = buildNumberIncrease()
    version += '.' + buildNumber
    war {
        manifest = defaultManifest(project)
        // 忽略一些文件夹
        excludes = ['demo', 'static/js', 'static/css', 'static/less']
    }
    // 设置资源文件夹
    sourceSets {
        main {
            resources {
                srcDirs = ["src/main/resources", "src/main/resources-prod"]
            }
        }
    }
}

//
// 编译发布用的 war 包
task release(dependsOn: ['setReleaseWarVersion', 'war']) << {
	println '== Release WAR Generate Over'
}


